# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    #   with:
    #     gradle-version: '8.9'
    #
    # - name: Build with Gradle 8.9
    #   run: gradle build

  sca_scan_job: # DevSec Scan
    runs-on: ubuntu-latest  # The job runs on the latest Ubuntu environment 

    steps: 
      # DevSec Scan 
      - uses: actions/checkout@v2
      - name: SAST
        run: |
          docker run --pull always --rm \
            --env GITLAB_CI \
            --env CI_BUILD_ID \
            --env CI_DEFAULT_BRANCH \
            --env CI_COMMIT_SHA \
            --env CI_PIPELINE_IID \
            --mount type=bind,source=$PWD,target=/scan \
            registry.fortidevsec.forticloud.com/fdevsec_sast:latest main s --org-id 64abf5b5-8f71-4a40-abc4-55d9da1f1147 --app-id dc6882a4-25d6-4438-ac9c-1c40d7ab85b0 -r 7

      
          
          
          

